// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
/// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Lead {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String
  phone       String
  company     String
  position    String?
  status      String // Hot, Warm, Cold
  value       Float?
  source      String?
  lastContact DateTime?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  calls       Call[]
}

model Call {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  contact   String
  phone     String
  company   String
  type      String // Inbound, Outbound
  status    String // Completed, Missed
  duration  String?
  date      DateTime
  time      String?
  notes     String?
  outcome   String? // Busy, Callback, Interested, NoAnswer, NotInterested, Sale, WrongNumber
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  leadId    String?  @db.ObjectId // Reference to Lead
  lead      Lead?    @relation(fields: [leadId], references: [id])
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      String // admin, agent, manager
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  address   String?
  phone     String?
  website   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
